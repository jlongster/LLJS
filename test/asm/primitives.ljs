
extern assertEqual;

function void main() {
  assertEqual(sizeof(u8), 1);
  assertEqual(sizeof(i8), 1);
  assertEqual(sizeof(u16), 2);
  assertEqual(sizeof(i16), 2);
  assertEqual(sizeof(u32), 4);
  assertEqual(sizeof(i32), 4);
  assertEqual(sizeof(float), 4);
  assertEqual(sizeof(double), 8);
  
  assertEqual(i8(-1), -1);
  assertEqual(i16(-1), -1);
  assertEqual(i32(-1), -1);
  /* assertEqual(u8(-1), 255); */
  /* assertEqual(u16(-1), 65535); */
  /* assertEqual(u32(-1), 4294967295); */

  // integer arithmetic
  let int x = 8;
  let int y = 6;
  assertEqual(x + y, 14);
  assertEqual(x - y, 2);
  assertEqual(x / y, 1);
  assertEqual(x * y, 48);
  assertEqual(x % y, 2);

  // double arithmetic
  let double z = 5.1;
  let double w = 6.0;
  assertEqual(z + w, 11.1);
  assertEqual(z - w, -.9);
  assertEqual(z / w, .85);
  assertEqual(z * w, 30.6);

  // mixing ints and doubles coerces everything to doubles
  assertEqual(z * x, 40.8);

  // if
  x = 5;
  if(x > 3) {
    x = 10;
  }
  assertEqual(x, 10);

  // conditionals
  x = 5;
  if(x > 3 && x < 10 && 1) {
      x = 15;
  }

  x = 5;
  y = 6;
  if(x > 1 || y > 10 || 0) {
    x = 15;
  } 
  assertEqual(x, 15);

  // while loop
  x = 0;
  y = 1;
  while(x < 10) {
    x = x + 1;
    y = y * 2;
  }
  assertEqual(y, 1024);

  // for loop
  y = 1;
  let int i; // only works when declaring outside loop (for now)
  for(i=0; i<10; i++) {
    y = y * 2;
  }
  assertEqual(y, 1024);
}
